#version 460
#extension GL_ARB_separate_shader_objects : enable
#extension GL_ARB_shading_language_420pack : enable
#extension GL_ARB_compute_shader : enable

layout(local_size_x = 32, local_size_y = 1) in;

layout(set = 0, binding = 0) buffer InputData {
    float picture_info[];
};

layout(set = 0, binding = 1, rgba8) uniform writeonly image2D output_image;

//uniform int width;
//uniform int height;

void main() {
    //int index = int(gl_GlobalInvocationID.x + gl_GlobalInvocationID.y * width);
    //
    //if (index < width * height) {
    //    float intensity = picture_info[index];
    //
    //    vec4 grayscale_color = vec4(intensity, intensity, intensity, 1.0);
    //
    //    int x = index%width;
    //    int y = index/width;
    //
    //    imageStore(output_image, ivec2(x, y), grayscale_color);
    //}
}
